annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
ui <- page_fillable(
titlePanel("Welcome to the Trade Policy Dashboard", windowTitle = "Welcome to the Trade Policy Dashboard"),
textOutput("description"),
navset_card_tab(
### Inflation ###
nav_panel("Inflation", plotOutput("plot_inflation")),
### Federal Budget Balance ###
nav_panel("Federal Budget Balance", plotOutput("plot_budget")),
### Trade Balance ###
nav_panel("Trade Balance", plotOutput("plot_trade")),
)
)
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
output$plot_inflation <- renderPlot(
cpi_start <- as.Date(as.yearmon(start(cpi_inflation)[1] + (start(cpi_inflation)[2] - 1)/4)),
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4)),
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = cpi_start, y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
budget_start <- as.Date(as.yearmon(start(budget_real)[1] + (start(budget_real)[2] - 1)/4)),
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4)),
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = budget_start, y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
trade_start <- as.Date(as.yearmon(start(trade_agg_qt)[1] + (start(trade_agg_qt)[2] - 1)/4)),
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4)),
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt)),
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
cpi_start <- as.Date(as.yearmon(start(cpi_inflation)[1] + (start(cpi_inflation)[2] - 1)/4))
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4))
budget_start <- as.Date(as.yearmon(start(budget_real)[1] + (start(budget_real)[2] - 1)/4))
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4))
trade_start <- as.Date(as.yearmon(start(trade_agg_qt)[1] + (start(trade_agg_qt)[2] - 1)/4))
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4))
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt))
output$plot_inflation <- renderPlot(
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = cpi_start, y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = budget_start, y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
cpi_start <- as.Date(as.yearmon(start(cpi_inflation)[1] + (start(cpi_inflation)[2] - 1)/4))
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4))
budget_start <- as.Date(as.yearmon(start(budget_real)[1] + (start(budget_real)[2] - 1)/4))
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4))
trade_start <- as.Date(as.yearmon(start(trade_agg_qt)[1] + (start(trade_agg_qt)[2] - 1)/4))
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4))
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt))
output$plot_inflation <- renderPlot(
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = cpi_start, y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = budget_start, y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = trade_start, y = 0, label = "Target: Eliminate Trade Deficit",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
cpi_start <- as.Date(as.yearmon(start(cpi_inflation)[1] + (start(cpi_inflation)[2] - 1)/4))
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4))
budget_start <- as.Date(as.yearmon(start(budget_real)[1] + (start(budget_real)[2] - 1)/4))
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4))
trade_start <- as.Date(as.yearmon(start(trade_agg_qt)[1] + (start(trade_agg_qt)[2] - 1)/4))
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4))
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt))
output$plot_inflation <- renderPlot(
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = cpi_start, y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = budget_start, y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = trade_start, y = 0, label = "Target: Eliminate Trade Deficit",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
budget_start
budget_start <- as.Date(as.yearmon(start(budget_real)[1] + (start(budget_real)[2] - 1)/4))
budget_start
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4))
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4))
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4))
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt))
output$plot_inflation <- renderPlot(
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = "1990-01-01", y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = "1990-01-01", y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = "1990-01-01", y = 0, label = "Target: Eliminate Trade Deficit",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
as.Date("1990-01-01")
server <- function(input, output) {
output$description <- renderText("This tool tracks quarterly trends in key economic indicators identified by
the Trump administration’s trade agenda as gauges of success. Each indicator provides insight into
how policy actions align with stated goals, offering an up-to-date look at economic outcomes. Use
the buttons below to explore individual indicators, view their associated targets, and assess progress
across different areas of trade policy.")
# Baseline year breaks
year_breaks <- seq(as.Date(as.yearqtr("1990 Q1")), as.Date(as.yearqtr("2025 Q1")), by = "5 years")
# Convert date into year-quarter
date2qt <- function(x) {
y <- format(x, "%Y")
q <- paste0("Q", as.numeric(format(x, "%m")) %/% 3 + 1)
paste(y, q)
}
cpi_end <- as.Date(as.yearmon(end(cpi_inflation)[1] + (end(cpi_inflation)[2] - 1)/4))
budget_end <- as.Date(as.yearmon(end(budget_real)[1] + (end(budget_real)[2] - 1)/4))
trade_end <- as.Date(as.yearmon(end(trade_agg_qt)[1] + (end(trade_agg_qt)[2] - 1)/4))
df_trade <- data.frame(quarter = as.Date(time(trade_agg_qt)), agg_balance = as.matrix(trade_agg_qt),
china_balance = as.matrix(trade_china_qt))
output$plot_inflation <- renderPlot(
autoplot(cpi_inflation, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = cpi_end, y = tail(cpi_inflation, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = cpi_end, y = tail(cpi_inflation, 1),
label = paste0(as.character(round(tail(cpi_inflation, 1)*100, digits = 2)), "%"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0.005, color = eig_colors[4]) +
annotate(geom = "text", x = as.Date("1990-01-01"), y = 0.005, label = "Long-run Fed target",
hjust = 0, vjust = 2, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-0.02, 0.02, 0.005), labels = scales::percent) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Inflation (%)") +
xlab("Time (Quarter)")
)
output$plot_budget <- renderPlot(
autoplot(budget_real, ts.colour = eig_colors[1]) +
# Add current level
geom_point(aes(x = budget_end, y = tail(budget_real, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = budget_end, y = tail(budget_real, 1),
label = paste0(as.character(round(tail(budget_real, 1), digits = 1)), "B"),
vjust = -1, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = as.Date("1990-01-01"), y = 0, label = "Target: Balanced Budget",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_y_continuous(breaks = seq(-2250, 250, 250)) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Federal Fiscal Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
output$plot_trade <- renderPlot(
ggplot(df_trade, aes(x = quarter)) +
geom_line(aes(y = agg_balance), color = eig_colors[1]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_agg_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_agg_qt, 1),
label = paste0(as.character(round(tail(trade_agg_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
geom_line(aes(y = china_balance), color = eig_colors[2]) +
# Add current level
geom_point(aes(x = trade_end, y = tail(trade_china_qt, 1)), color = eig_colors[1], size = 1.5) +
annotate(geom = "text", x = trade_end, y = tail(trade_china_qt, 1),
label = paste0(as.character(round(tail(trade_china_qt, 1), digits = 1)), "B"),
vjust = 2, color = eig_colors[1]) +
# Add policy target
geom_hline(yintercept = 0, color = eig_colors[4]) +
annotate(geom = "text", x = as.Date("1990-01-01"), y = 0, label = "Target: Eliminate Trade Deficit",
hjust = 0, vjust = -1, color = eig_colors[4]) +
theme_half_open() + background_grid(major = c("y"), minor = c("none")) +
scale_x_date(limits = c(as.Date(as.yearqtr("1989 Q1")), as.Date(as.yearqtr("2026 Q2"))),
breaks = year_breaks, labels = date2qt, expand = c(0,0)) +
ylab("Trade Balance (Billions of Dollars)") +
xlab("Time (Quarter)")
)
}
shinyApp(ui = ui, server = server)
