#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker",
"sarah" = "/Users/sarah/Documents/GitHub/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_cbp <- file.path(path_data, "CBP")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
##################
### Data build ###
##################
china_shock <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit_czones <- china_shock %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(CZ90 = as.numeric(czone_1990)) %>% .$CZ90
# Commuting zones to counties crosswalk
czone_to_counties <- read_xls(file.path(path_cbp, "czlma903.xls"), sheet = "CZLMA903")
china_most_hit_counties <- czone_to_counties %>% mutate(CZ90 = as.numeric(CZ90),
county = as.numeric(`County FIPS Code`),
county_name = `County Name`) %>%
filter(CZ90 %in% china_most_hit_czones) %>% select(county, county_name, CZ90)
# Add VA cities that got subsumed into counties
va_cities <- data.frame(county = c(51560),
county_name = c("Clifton Forge City"),
CZ90 = c(602))
china_most_hit_counties <- bind_rows(china_most_hit_counties, va_cities)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp), # if no suppression, employment is total employment
empflag != "" ~ floor((n1_4 + n5_9 + n10_19 + n20_49 + n50_99 + # if suppression, employment is mean employment in supressed bins.
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4)*weight_emp)),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit_counties <- china_most_hit_counties %>% left_join(cbp_year, by = "county")
}
for(year in c(as.character(98:99), paste0("0", 0:9), as.character(10:22))){
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% rename_with(tolower) %>% filter(naics == "31----") %>% select(-naics) %>%
mutate_all(~replace(., is.na(.), 0))
if(year == "17"){
cbp_year <- cbp_year %>% mutate(emp = case_when(empflag == "" ~ as.numeric(emp),
empflag == "A" ~ 19/2,
empflag == "B" ~ (20+99)/2,
empflag == "C" ~ (100+249)/2,
empflag == "E" ~ (250+499)/2,
empflag == "F" ~ (500+999)/2,
empflag == "G" ~ (1000+2499)/2,
empflag == "H" ~ (2500+4999)/2,
empflag == "I" ~ (5000+9999)/2,
empflag == "J" ~ (10000+24999)/2,
empflag == "K" ~ (25000+49999)/2,
empflag == "L" ~ (50000+99999)/2,
empflag == "M" ~ 100000,
TRUE ~ 0),
county = fipstate * 1000 + fipscty)
}else if(year %in% c(as.character(18:22))){
cbp_year <- cbp_year %>% mutate(emp = as.numeric(emp),
county = fipstate * 1000 + fipscty)
}else{
cbp_year <- cbp_year %>% mutate(across(starts_with("n"), ~as.numeric(.)*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ as.numeric(emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 +
n50_99 + n100_249 + n250_499 + n500_999 +
n1000_1 + n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty)
}
cbp_year <- cbp_year %>% ungroup() %>% group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit_counties <- china_most_hit_counties %>% left_join(cbp_year, by = "county")
}
View(china_most_hit_counties)
manu_emp_cn_most_hit <- china_most_hit_counties %>% ungroup() %>% mutate_all(~replace(., is.na(.), 0)) %>%
select(-1:-3) %>% mutate_all(~round(.)) %>% summarise_all(sum)
# save as time series
china_shock = manu_emp_cn_most_hit %>%
pivot_longer(cols = names(manu_emp_cn_most_hit)) %>%
mutate(year = as.numeric(gsub("man_emp_", "", name)),
year = case_when(
year >= 60 ~ 1900 + year,
TRUE ~ 2000 + year
), value = as.numeric(value)/1000000) %>% select(year, value)
# convert to time series
china_shock_yr = ts(china_shock$value, start = c(1990), frequency = 1)
china_shock_yr
save(china_shock_yr, file = file.path(path_appdata, "china_shock.RData"))
View(china_most_hit_counties)
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
cur_import <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto$sitc2)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country_name" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country_name = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country_name" = "country.name.en") %>% bind_rows(., eastern_bloc) %>%
mutate(country_name = "European Union")
code_list <- bind_rows(non_eu_code_list, eu_code_list) %>%
add_row(country_name = "European Union", un = 280)  # Germany country code is different in dataset after reunification
country_list <- data.frame(country_name = unique(code_list$country_name))
# import and clean 1972 to 1988
nber_imports <- list()
cur_import <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_year <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year),
subcode = as.numeric(subcode)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto)
View(cur_import)
cur_year <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto)
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto$sitc2)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country_name" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country_name = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country_name" = "country.name.en") %>% bind_rows(., eastern_bloc) %>%
mutate(country_name = "European Union")
code_list <- bind_rows(non_eu_code_list, eu_code_list) %>%
add_row(country_name = "European Union", un = 280)  # Germany country code is different in dataset after reunification
country_list <- data.frame(country_name = unique(code_list$country_name))
# import and clean 1972 to 1988
nber_imports <- list()
cur_year <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto)
y_lvl <- 600/4
runApp()
runApp()
# Project: Analyzing auto trade over time
# last update: 4/29/2025 by Jiaxin He
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
##################
### Data build ###
##################
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto$sitc2)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country_name" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country_name = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country_name" = "country.name.en") %>% bind_rows(., eastern_bloc) %>%
mutate(country_name = "European Union")
code_list <- bind_rows(non_eu_code_list, eu_code_list) %>%
add_row(country_name = "European Union", un = 280)  # Germany country code is different in dataset after reunification
country_list <- data.frame(country_name = unique(code_list$country_name))
# import and clean 1972 to 1988
nber_imports <- list()
cur_year <- 93
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto)
runApp()
runApp()
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
View(cur_import)
cur_year <- 104
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto)
View(cur_import)
cur_year <- 94
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto, !subcode %in% c("1", "01"))
cur_year <- 104
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto, !subcode %in% c("1", "01"))
# Project: Analyzing auto trade over time
# last update: 4/29/2025 by Jiaxin He
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
##################
### Data build ###
##################
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto$sitc2)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country_name" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country_name = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country_name" = "country.name.en") %>% bind_rows(., eastern_bloc) %>%
mutate(country_name = "European Union")
code_list <- bind_rows(non_eu_code_list, eu_code_list) %>%
add_row(country_name = "European Union", un = 280)  # Germany country code is different in dataset after reunification
country_list <- data.frame(country_name = unique(code_list$country_name))
# import and clean 1972 to 1988
nber_imports <- list()
for(cur_year in 72:88){
cur_import <- read.dta(file.path(path_davis, paste0("imp", cur_year, ".dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(yr)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto, csc != 1) %>% # exclude transshipment
group_by(year, country_name, sitc2) %>%
summarise(import_value = sum(cusvalue),
import_quantity = sum(quantity))
nber_imports[[cur_year - 71]] <- country_list %>% left_join(cur_import, by = "country_name") %>%
mutate(year = 1900 + cur_year) %>% replace(is.na(.), 0)
}
for(cur_year in 89:106){
cur_import <- read.dta(file.path(path_davis,
paste0("imp", formatC(cur_year %% 100, flag = 0, width = 2), "_con.dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(year)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto, !subcode %in% c("1", "01")) %>% # exclude transshipment
group_by(year, country_name, sitc2) %>%
summarise(import_value = sum(gvalue),
import_quantity = sum(gquan))
nber_imports[[cur_year - 71]] <- country_list %>% left_join(cur_import, by = "country_name") %>%
mutate(year = 1900 + cur_year) %>% replace(is.na(.), 0)
}
nber_import_72_06 <- bind_rows(nber_imports)
nber_import_72_06 <- nber_import_72_06 %>% mutate(sitc = case_when(sitc2 == 0 ~ "78100", TRUE ~ sitc2),
import_value = import_value / 1000000,
import_quantity = import_quantity / 1000) %>%
rename("country" = "country_name") %>% select(-sitc2) %>% relocate(year, country, sitc)
write.csv(nber_import_72_06 %>% ungroup() %>%
group_by(year, country) %>% summarise(import_value = sum(import_value),
import_quantity = sum(import_quantity)),
file = file.path(path_output, "nber_auto_import_1972-2006.csv"))
write.csv(nber_import_72_06 %>% ungroup() %>% filter(sitc %in% c("78100", "78210")) %>%
group_by(year, country) %>% summarise(import_value = sum(import_value),
import_quantity = sum(import_quantity)),
file = file.path(path_output, "nber_auto_import_pv_lt_1972-2006.csv"))
cur_year <- 85
cur_import <- read.dta(file.path(path_davis, paste0("imp", cur_year, ".dta")))
cur_import <- cur_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(yr)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country_name), sitc2 %in% sitc_auto, csc != 1)
View(cur_import)
japan_imports <- list()
for(cur_year in 79:88){
cur_import <- read.dta(file.path(path_davis, paste0("imp", cur_year, ".dta")))
cur_import <- cur_import %>%
mutate(year = 1900 + as.numeric(yr)) %>%
filter(ccode == 413920, sitc2 %in% c("78100", "78210")) %>%
group_by(year, country_name, csc) %>%
summarise(import_value = sum(cusvalue),
import_quantity = sum(quantity))
japan_imports[[cur_year - 78]] <- cur_import
}
for(cur_year in 79:88){
cur_import <- read.dta(file.path(path_davis, paste0("imp", cur_year, ".dta")))
cur_import <- cur_import %>%
mutate(year = 1900 + as.numeric(yr)) %>%
filter(ccode == 413920, sitc2 %in% c("78100", "78210")) %>%
group_by(year, name, csc) %>%
summarise(import_value = sum(cusvalue),
import_quantity = sum(quantity))
japan_imports[[cur_year - 78]] <- cur_import
}
japan_imports <- bind_rows(japan_imports)
View(japan_imports)
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
shiny::runApp()
# R Shiny
library(shiny)
library(rsconnect)
rsconnect::setAccountInfo(name='economicinnovationgroup',
token='1E424A49864E72123BE5CAA19E6D2274',
secret='/OJ/Oy/GW2sk6ibHJt4JgoqzB80U03mcEyFJn0ev')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
