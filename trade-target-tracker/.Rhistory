df_ts <- final(seas(df_ts)) # Seasonally adjust FRED budget and construction spending data
}
df_ts %>% aggregate(., nfrequency = 4, FUN = func)
}
cpi_qt <- quarterly(CPI_month, c(1989,1), mean, FALSE)
cpi_qt
budget_qt <- quarterly(budget_month, c(1990,1), sum, TRUE)
construction_qt <- quarterly(contruction_month, c(1993,1), sum, TRUE)
manu_qt <- quarterly(manu_month, c(1990,1), mean, FALSE)
motor_qt <- quarterly(motor_month, c(1990,1), mean, FALSE)
priv_qt <- quarterly(priv_month, c(1990,1), mean, FALSE)
# Calculate quarterly inflation
pce_inflation <- (PCE_qt[5:length(PCE_qt)] / PCE_qt[1:(length(PCE_qt)-4)] - 1) %>%
ts(., start = c(1990,1), frequency = 4)
pce_adj <- PCE_qt[5:length(PCE_qt)]/100
# Adjust budegt to billions of 2017 dollars, using CPI-U
cpi_adj <- cpi_qt[5:length(cpi_qt)] / mean(cpi_qt[((2017-1989)*4 + 1):((2017-1989)*4 + 4)])
cpi_adj
cpi_qt[5:length(cpi_qt)]
cpi_qt
budget_qt
mean(cpi_qt[((2017-1989)*4 + 1):((2017-1989)*4 + 4)])
cpi_qt
budget_real <- budget_qt / (cpi_adj*1000)
budget_real
# Adjust construction spending to billions of 2017 dollars
path_bea <- file.path(path_project, "data/BEA")
manu_const_price_index <- read_xlsx(file.path(path_bea, "bea_const_price_indices.xlsx"),
sheet = "Table",
skip = 5) %>% filter(`...2` == "Manufacturing") %>% select(-1:-2)
manu_const_adj <- as.numeric(unlist(manu_const_price_index))/100
construction_real <- construction_qt / (manu_const_adj*1000)
income_yr
View(income_yr)
View(income_yr)
income_yr <- fredo(FRED_API_KEY, income_id, start_date, end_date) %>% select(date, value) %>%
ts(., start = c(1990,1), frequency = 1)
income_yr
income_yr <- fredo(FRED_API_KEY, income_id, start_date, end_date) %>% select(value) %>%
ts(., start = c(1990,1), frequency = 1)
cpi_qt
cpi_qt %>% aggregate(., nfrequency = 1, FUN = mean)
length(cpi_yr)
# Adjust median household income to 2017 PCE dollars
cpi_yr <- cpi_qt %>% aggregate(., nfrequency = 1, FUN = mean)
length(cpi_yr)
cpi_adj_year <- cpi_yr[2:(length(cpi_yr)-1)]/cpi_yr[1:(length(cpi_yr)-2)]
cpi_adj_year
cpi_yr
cpi_yr[2017-1989+1]
cpi_qt
cpi_adj_year <- cpi_yr[2:(length(cpi_yr)-1)]/cpi_yr[2017-1989+1]
cpi_adj_year
income_yr
income_yr * cpi_adj_year
pce_adj
PCE_qt[5:(length(PCE_qt)-4)]
PCE_qt
PCE_qt[5:(length(PCE_qt)-4)] %>% aggregate(., nfrequency = 1, FUN = mean)
PCE_qt[5:(length(PCE_qt)-4)] %>% ts(., start = c(1990,1), frequency = 4)
PCE_qt[5:(length(PCE_qt)-4)] %>% ts(., start = c(1990,1), frequency = 4) %>%
aggregate(., nfrequency = 1, FUN = mean)
PCE_qt[5:(length(PCE_qt)-4)] %>% ts(., start = c(1990,1), frequency = 4) %>%
aggregate(., nfrequency = 1, FUN = mean) / 100
# Adjust median household income to 2017 PCE dollars
cpi_yr <- cpi_qt %>% aggregate(., nfrequency = 1, FUN = mean)
cpi_adj_yr <- cpi_yr[2:(length(cpi_yr)-1)]/cpi_yr[2017-1989+1]
pce_adj_yr <- PCE_qt[5:(length(PCE_qt)-4)] %>% ts(., start = c(1990,1), frequency = 4) %>%
aggregate(., nfrequency = 1, FUN = mean) / 100
income_yr * cpi_adj_yr / pce_adj_yr
income_yr
income_yr * cpi_adj_yr / pce_adj_yr
income_yr
income_yr * cpi_adj_yr / pce_adj_yr
income_yr <- income_yr * cpi_adj_yr / pce_adj_yr
# Project: Trump Trade Policy Targets Dashboard
# File description: FRED data pull for:
#   0. CPI-U
#   1. Federal budget balance
#   2. Total private construction spending, manufacturing
#   3. Employment, Manufacturing
#   4. Employment, Motor Vehicles and Parts
#   5. Employment, Total Private
# last update: 4/22/2025 by Jiaxin He
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(curl)
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
library(zoo)
# Install and load FRED API
# Link: https://fredblog.stlouisfed.org/2024/12/leveraging-r-for-powerful-data-analysis/
# install.packages("devtools")
# devtools::install_github("manutzn/fredo")
library(fredo)
library(seasonal) # Use X-13 to seasonally adjust monthly data
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker",
"sarah" = "/Users/sarah/Documents/GitHub/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
##################
### Data build ###
##################
# Insert your FRED API key here
FRED_API_KEY <- "ac17e5b7bc9c9e7c03f3f452bcb3051e"
api_key <- Sys.getenv("FRED_API_KEY")
start_date <- "1990-01-01"
end_date <- "2025-03-01"
# Query quarterly chained PCE (2017 basis)
PCE_id <- "PCECTPI"
PCE_qt <- fredo(FRED_API_KEY, PCE_id, "1989-01-01", end_date) %>% select(value) %>%
ts(., start = c(1989,1), frequency = 4)
# Query monthly C-CPI-U
CPI_id <- "SUUR0000SA0"
CPI_month <- fredo(FRED_API_KEY, CPI_id, "1999-12-01", end_date)
# Import monthly R-CPI-U-RS from BLS and combine with C-CPI-U, replicating Census' approach
path_bls <- file.path(path_project, "data/BLS")
rcpi_rs <- read_xlsx(file.path(path_bls, "r-cpi-u-rs-allitems.xlsx"), sheet = "All items", skip = 5)
rcpi_rs <- rcpi_rs %>% filter(YEAR >= 1989 & YEAR <= 1999) %>% select(-AVG) %>%
pivot_longer(cols = -YEAR, names_to = "month", values_to = "value") %>%
mutate(date = as.Date(as.yearmon(paste(month, YEAR, sep = " ")))) %>%
select(date, value)
rcpi_rs$value <- rcpi_rs$value / tail(rcpi_rs$value, 1) * 100
CPI_month <- bind_rows(rcpi_rs, CPI_month %>% select(date, value)) %>% distinct(date, .keep_all = TRUE)
# Query monthly federal budget balance
budget_id <- "MTSDS133FMS"
budget_month <- fredo(FRED_API_KEY, budget_id, start_date, end_date)
# Query private construction spending, manufacturing
construction_id <- "PRMFGCON"
contruction_month <- fredo(FRED_API_KEY, construction_id, start_date, end_date)
# Query real annual median household income
income_id <- "MEHOINUSA672N"
income_yr <- fredo(FRED_API_KEY, income_id, start_date, end_date) %>% select(value) %>%
ts(., start = c(1990,1), frequency = 1)
# Query all employees, manufacturing
emp_manu <- "MANEMP"
manu_month <- fredo(FRED_API_KEY, emp_manu, start_date, end_date)
# Query all employees, motor vehicles and parts
emp_motor <- "CES3133600101"
motor_month <- fredo(FRED_API_KEY, emp_motor, start_date, end_date)
# Query all employees, private
emp_priv <- "USPRIV"
priv_month <- fredo(FRED_API_KEY, emp_priv, start_date, end_date)
# Query industrial production, manufacturing (seasonally adjusted)
ip_manu <- "IPGMFSQ"
ipman_qt <- fredo(FRED_API_KEY, ip_manu, start_date, end_date)
ipman_qt <- ipman_qt %>% select(value) %>% ts(., start = c(1990,1), frequency = 4)
# Tabulate by quarters, seasonally adjust the unadjusted ones
quarterly <- function(df, start_month, func, seasonal = FALSE){
df_ts <- df %>% select(value) %>% ts(., start = start_month, frequency = 12)
if(seasonal){
df_ts <- final(seas(df_ts)) # Seasonally adjust FRED budget and construction spending data
}
df_ts %>% aggregate(., nfrequency = 4, FUN = func)
}
cpi_qt <- quarterly(CPI_month, c(1989,1), mean, FALSE)
budget_qt <- quarterly(budget_month, c(1990,1), sum, TRUE)
construction_qt <- quarterly(contruction_month, c(1993,1), sum, TRUE)
manu_qt <- quarterly(manu_month, c(1990,1), mean, FALSE)
motor_qt <- quarterly(motor_month, c(1990,1), mean, FALSE)
priv_qt <- quarterly(priv_month, c(1990,1), mean, FALSE)
# Calculate quarterly inflation
pce_inflation <- (PCE_qt[5:length(PCE_qt)] / PCE_qt[1:(length(PCE_qt)-4)] - 1) %>%
ts(., start = c(1990,1), frequency = 4)
pce_adj <- PCE_qt[5:length(PCE_qt)]/100
# Adjust budegt to billions of 2017 dollars, using CPI-U
cpi_adj <- cpi_qt[5:length(cpi_qt)] / mean(cpi_qt[((2017-1989)*4 + 1):((2017-1989)*4 + 4)])
budget_real <- budget_qt / (cpi_adj*1000)
# Adjust construction spending to billions of 2017 dollars
path_bea <- file.path(path_project, "data/BEA")
manu_const_price_index <- read_xlsx(file.path(path_bea, "bea_const_price_indices.xlsx"),
sheet = "Table",
skip = 5) %>% filter(`...2` == "Manufacturing") %>% select(-1:-2)
manu_const_adj <- as.numeric(unlist(manu_const_price_index))/100
construction_real <- construction_qt / (manu_const_adj*1000)
# Adjust median household income to 2017 PCE dollars
cpi_yr <- cpi_qt %>% aggregate(., nfrequency = 1, FUN = mean)
cpi_adj_yr <- cpi_yr[2:(length(cpi_yr)-1)]/cpi_yr[2017-1989+1]
pce_adj_yr <- PCE_qt[5:(length(PCE_qt)-4)] %>% ts(., start = c(1990,1), frequency = 4) %>%
aggregate(., nfrequency = 1, FUN = mean) / 100
income_yr <- income_yr * cpi_adj_yr / pce_adj_yr
# Calculate manufacturing and automotive shares of private employment
manu_share <- manu_qt / priv_qt
motor_share <- motor_qt / priv_qt
manu_qt <- manu_qt / 1000
motor_qt <- motor_qt / 1000
# Export data
save(pce_adj, pce_inflation, ipman_qt, income_yr, budget_real, construction_real,
manu_qt, motor_qt, manu_share, motor_share, file = file.path(path_appdata, "fred_data.RData"))
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
library(readxl)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_bea <- file.path(path_data, "BEA")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
# Load 2017 real dollar adjustments from cleaned FRED data
load(file.path(path_appdata, "fred_data.RData"))
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 3
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74) %>% select(1:2) %>%
na.omit() %>% rename(month = Monthly, balance = `...2`)
trade_china_qt <- read_xlsx(file.path(path_bea, "trad-geo-time-series-0125.xlsx"),
sheet = "Table 3",
skip = 5) %>% slice(29:n()) %>% select(Period, China) %>%
na.omit() %>% rename(quarter = Period, balance = China)
# Monthly goods trade with China from 1992 to 1998 are obtained from Census
# Link: https://www.census.gov/foreign-trade/balance/c5700.html
trade_china_hist <- read.csv(file.path(path_bea, "trad-china-hist-92-98.csv")) %>%
select(Month, Balance) %>% rename(month = Month, balance = Balance)
trade_china_hist$balance <- round(as.numeric(sub(",", "", trade_china_hist$balance)), digits = 0)
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74)
View(trade_agg_month)
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 3
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74) %>% select(1:2) %>%
na.omit() %>% rename(month = Monthly, balance = `...3`)
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 3
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74) %>% select(1,3) %>%
na.omit() %>% rename(month = Monthly, balance = `...3`)
View(trade_agg_month)
trade_china_qt <- read_xlsx(file.path(path_bea, "trad-geo-time-series-0125.xlsx"),
sheet = "Table 6",
skip = 5) %>% slice(29:n())
View(trade_china_hist)
View(trade_china_hist)
View(trade_china_qt)
trade_china_qt <- read_xlsx(file.path(path_bea, "trad-geo-time-series-0125.xlsx"),
sheet = "Table 6",
skip = 5) %>% slice(29:n()) %>% select(Period, China) %>%
na.omit() %>% rename(quarter = Period, balance = China)
View(trade_china_hist)
# Monthly goods trade with China from 1992 to 1998 are obtained from Census
# Link: https://www.census.gov/foreign-trade/balance/c5700.html
trade_china_hist <- read.csv(file.path(path_bea, "trad-china-hist-92-98.csv")) %>%
select(Month, Balance) %>% rename(month = Month, balance = Balance)
trade_china_hist$balance <- round(as.numeric(sub(",", "", trade_china_hist$balance)), digits = 0)
# Manufacturing value added share of gdp
share_va_manu_q <- read.csv(file.path(path_bea, "manu_share_gdp_2005_2024_Q.csv"), skip = 3, header = TRUE)
View(share_va_manu_q)
share_va_manu_q <- head(va_manu_q, -5) %>% select(-1:-2)
share_va_manu_q <- head(share_va_manu_q, -5) %>% select(-1:-2)
share_va_manu_2005_2024_qt <- as.numeric(unlist(share_va_manu_q[2,])) %>%
ts(., start = c(2005, 1), frequency = 4)
share_va_manu_2005_2024_qt
share_va_manu_a <- read.csv(file.path(path_bea, "manu_share_gdp_1997_2004_A.csv"), skip = 3, header = TRUE)
share_va_manu_a <- head(share_va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
View(share_va_manu_a)
share_va_manu_1997_2004_year <- as.numeric(unlist(share_va_manu_a[1,])) %>%
ts(., start = c(1997, 1), frequency = 1)
View(share_va_manu_a)
View(share_va_manu_q)
# Real value added by industry
va_manu_q <- read.csv(file.path(path_bea, "real_VA_manu_2005_2024_Q.csv"), skip = 3, header = TRUE)
va_manu_q <- head(va_manu_q, -5) %>% select(-1:-2)
va_manu_2005_2024_qt <- as.numeric(unlist(va_manu_q[2,])) %>%
ts(., start = c(2005, 1), frequency = 4) / 1000
va_manu_a <- read.csv(file.path(path_bea, "real_VA_manu_1997_2004_A.csv"), skip = 3, header = TRUE)
va_manu_a <- head(va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
va_manu_1997_2004_year <- as.numeric(unlist(va_manu_a[1,])) %>%
ts(., start = c(1997, 1), frequency = 1) / 1000
va_manu_1997_2004_year
share_va_manu_1997_2004_year
# Aggregate quarterly total trade balance
trade_agg_qt <- trade_agg_month$balance %>% ts(., start = c(1992,1), frequency = 12) %>%
aggregate(., nfrequency = 4, FUN = sum)
trade_agg_qt
# Aggregate quarterly China trade balance
# Seasonally adjust historical data
trade_china_qt_92_98 <- final(seas(trade_china_hist$balance %>%
ts(., start = c(1992,1), frequency = 12))) %>%
aggregate(., nfrequency = 4, FUN = sum)
trade_china_qt_99_24 <- trade_china_qt$balance %>% ts(., start = c(1999,1), frequency = 4)
trade_china_qt <- round(ts(c(trade_china_qt_92_98, trade_china_qt_99_24), start = start(trade_china_qt_92_98),
frequency = 4), digits = 0)
pce_adj
# Adjust to billions of 2017 dollars
trade_agg_qt <- trade_agg_qt / (pce_adj[9:length(pce_adj)]*1000)
trade_china_qt <- trade_china_qt / (pce_adj[9:length(pce_adj)]*1000)
# Project: Trump Trade Policy Targets Dashboard
# File description: BEA data pull for:
#   1. Aggregate trade balance
#   2. Trade balance with China
#   3. Total real value added, manufacturing
# Additional historical data downloaded manually from Census and OECD
# last update: 4/14/2025 by Jiaxin He
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
library(readxl)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_bea <- file.path(path_data, "BEA")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
##################
### Data build ###
##################
# Load 2017 real dollar adjustments from cleaned FRED data
load(file.path(path_appdata, "fred_data.RData"))
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1, column 3 "Goods"
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 6
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74) %>% select(1,3) %>%
na.omit() %>% rename(month = Monthly, balance = `...3`)
trade_china_qt <- read_xlsx(file.path(path_bea, "trad-geo-time-series-0125.xlsx"),
sheet = "Table 6",
skip = 5) %>% slice(29:n()) %>% select(Period, China) %>%
na.omit() %>% rename(quarter = Period, balance = China)
# Monthly goods trade with China from 1992 to 1998 are obtained from Census
# Link: https://www.census.gov/foreign-trade/balance/c5700.html
trade_china_hist <- read.csv(file.path(path_bea, "trad-china-hist-92-98.csv")) %>%
select(Month, Balance) %>% rename(month = Month, balance = Balance)
trade_china_hist$balance <- round(as.numeric(sub(",", "", trade_china_hist$balance)), digits = 0)
# Real value added by industry
va_manu_q <- read.csv(file.path(path_bea, "real_VA_manu_2005_2024_Q.csv"), skip = 3, header = TRUE)
va_manu_q <- head(va_manu_q, -5) %>% select(-1:-2)
va_manu_2005_2024_qt <- as.numeric(unlist(va_manu_q[2,])) %>%
ts(., start = c(2005, 1), frequency = 4) / 1000
va_manu_a <- read.csv(file.path(path_bea, "real_VA_manu_1997_2004_A.csv"), skip = 3, header = TRUE)
va_manu_a <- head(va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
va_manu_1997_2004_year <- as.numeric(unlist(va_manu_a[1,])) %>%
ts(., start = c(1997, 1), frequency = 1) / 1000
# Manufacturing value added share of gdp
share_va_manu_q <- read.csv(file.path(path_bea, "manu_share_gdp_2005_2024_Q.csv"), skip = 3, header = TRUE)
share_va_manu_q <- head(share_va_manu_q, -5) %>% select(-1:-2)
share_va_manu_2005_2024_qt <- as.numeric(unlist(share_va_manu_q[2,])) %>%
ts(., start = c(2005, 1), frequency = 4) / 100
share_va_manu_a <- read.csv(file.path(path_bea, "manu_share_gdp_1997_2004_A.csv"), skip = 3, header = TRUE)
share_va_manu_a <- head(share_va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
share_va_manu_1997_2004_year <- as.numeric(unlist(share_va_manu_a[1,])) %>%
ts(., start = c(1997, 1), frequency = 1) / 100
# Aggregate quarterly total trade balance
trade_agg_qt <- trade_agg_month$balance %>% ts(., start = c(1992,1), frequency = 12) %>%
aggregate(., nfrequency = 4, FUN = sum)
# Aggregate quarterly China trade balance
# Seasonally adjust historical data
trade_china_qt_92_98 <- final(seas(trade_china_hist$balance %>%
ts(., start = c(1992,1), frequency = 12))) %>%
aggregate(., nfrequency = 4, FUN = sum)
trade_china_qt_99_24 <- trade_china_qt$balance %>% ts(., start = c(1999,1), frequency = 4)
trade_china_qt <- round(ts(c(trade_china_qt_92_98, trade_china_qt_99_24), start = start(trade_china_qt_92_98),
frequency = 4), digits = 0)
# Adjust to billions of 2017 dollars
trade_agg_qt <- trade_agg_qt / (pce_adj[9:length(pce_adj)]*1000)
trade_china_qt <- trade_china_qt / (pce_adj[9:length(pce_adj)]*1000)
# Export data
save(trade_agg_qt, trade_china_qt, va_manu_1997_2004_year, va_manu_2005_2024_qt,
share_va_manu_1997_2004_year, share_va_manu_2005_2024_qt, file = file.path(path_appdata, "bea_data.RData"))
runApp('~/Documents/projects/trade-policy-targets-tracker/trade-target-tracker')
# Change to just file.path("cleaned_data", "fred_data.RData") when deploying online
load(file.path("cleaned_data", "fred_data.RData"))
# Change to just file.path("cleaned_data", "fred_data.RData") when deploying online
load(file.path("./cleaned_data", "fred_data.RData"))
#################
### Load Data ###
#################
setwd("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# Change to just file.path("cleaned_data", "fred_data.RData") when deploying online
load(file.path("cleaned_data", "fred_data.RData"))
load(file.path("cleaned_data", "bea_data.RData"))
load(file.path("cleaned_data", "cps_employment.RData"))
load(file.path("cleaned_data", "china_shock.RData"))
#################
### Load Data ###
#################
setwd("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# Change to just file.path("cleaned_data", "fred_data.RData") when deploying online
load(file.path("cleaned_data", "fred_data.RData"))
load(file.path("cleaned_data", "bea_data.RData"))
load(file.path("cleaned_data", "cps_employment.RData"))
load(file.path("cleaned_data", "china_shock.RData"))
# Define EIG color palette
eig_colors <- c("#1a654d", "#5e9c86", "#008080", "#044140", "#e1ad28")	  # EIG theme colors
## Share of Value Added as a Percentage of GDP##
share_va_df <- tibble(
quarter = c(as.Date(time(share_va_manu_1997_2004_year)), as.Date(time(share_va_manu_2005_2024_qt))),
value_added = c(as.matrix(share_va_manu_1997_2004_year), as.matrix(share_va_manu_2005_2024_qt)),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(share_va_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Add ticks
tick_years <- c(start_year,
seq((start_year %/% 5 + 1)*5, end_year %/% 5*5, by = 5))
tick_dates <- c(as.Date(paste0(tick_years, "-01-01")),
tail(date_range, 1))  # Q1 of each year
tick_texts <- as.character(as.yearqtr(tick_dates))
## Share of Value Added as a Percentage of GDP##
share_va_df <- tibble(
quarter = c(as.Date(time(share_va_manu_1997_2004_year)), as.Date(time(share_va_manu_2005_2024_qt))),
share_gdp = c(as.matrix(share_va_manu_1997_2004_year), as.matrix(share_va_manu_2005_2024_qt)),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
share_va_df
## Share of Value Added as a Percentage of GDP##
share_va_df <- tibble(
quarter = c(as.Date(time(share_va_manu_1997_2004_year)), as.Date(time(share_va_manu_2005_2024_qt))),
share_gdp = c(as.matrix(share_va_manu_1997_2004_year), as.matrix(share_va_manu_2005_2024_qt)),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(share_va_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Add ticks
tick_years <- c(start_year,
seq((start_year %/% 5 + 1)*5, end_year %/% 5*5, by = 5))
tick_dates <- c(as.Date(paste0(tick_years, "-01-01")),
tail(date_range, 1))  # Q1 of each year
tick_texts <- as.character(as.yearqtr(tick_dates))
plot_ly(
data = share_va_df,
x = ~quarter,
y = ~share_gdp,
type = 'scatter',
mode = 'lines',
name = "Value Added Share of GDP",
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.0f}%<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Value Added Share of GDP (%)",
tickformat = ",.0f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1])
)
