line = list(color = eig_colors[4], width = 2, dash = "dash"),
hoverinfo = "none",
hovertemplate = NULL,
showlegend = TRUE
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
ticktext = tick_texts,
hoverformat = "%Y",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Household Median Income (Dollars)",
tickformat = ",.0f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1])
)
runApp()
library(shiny); runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
rlang::last_trace()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# R Shiny
library(shiny)
library(rsconnect)
rsconnect::setAccountInfo(name='economicinnovationgroup',
token='1E424A49864E72123BE5CAA19E6D2274',
secret='/OJ/Oy/GW2sk6ibHJt4JgoqzB80U03mcEyFJn0ev')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# R Shiny
library(shiny)
library(rsconnect)
rsconnect::setAccountInfo(name='economicinnovationgroup',
token='1E424A49864E72123BE5CAA19E6D2274',
secret='/OJ/Oy/GW2sk6ibHJt4JgoqzB80U03mcEyFJn0ev')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
runApp()
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(usmap)
library(foreign)
library(ggplot2)
library(scales)
path_project <- "/Users/jiaxinhe/Documents/projects/auto-employment"
##################
### Data build ###
##################
schott_imports <- read.dta(file.path(path_project, "data/xm_sic87_72_105_20120424.dta"))
View(schott_imports)
auto_imports <- schott_imports %>% filter(sic == 376)
View(auto_imports)
auto_imports <- schott_imports %>% filter(sic == 3711)
View(auto_imports)
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3716)
View(auto_imports)
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3716) %>% select(year, wbcode, customs) %>%
group_by(year, wbcode) %>% summarise(imports = sum(customs))
imports_japan <- auto_imports %>% filter(wbcode == "JPN")
View(imports_japan)
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3715) %>% select(year, wbcode, customs) %>%
group_by(year, wbcode) %>% summarise(imports = sum(customs))
imports_japan <- auto_imports %>% filter(wbcode == "JPN")
##################
### Data build ###
##################
schott_imports <- read.dta(file.path(path_project, "data/xm_sic87_72_105_20120424.dta"))
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3715) %>% select(year, wbcode, customs) %>%
replace(is.na(.), 0) %>% group_by(year, wbcode) %>% summarise(imports = sum(customs))
imports_japan <- auto_imports %>% filter(wbcode == "JPN")
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3715) %>% select(year, wbcode, customs)
sum(is.na(auto_imports$customs))
auto_imports_year <- auto_imports %>% ungroup() %>% group_by(year) %>% summarise(imports = sum(imports))
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3715) %>% select(year, wbcode, customs) %>%
replace(is.na(.), 0) %>% group_by(year, wbcode) %>% summarise(imports = sum(customs))
auto_imports_year <- auto_imports %>% ungroup() %>% group_by(year) %>% summarise(imports = sum(imports))
View(auto_imports_year)
imports_jk <- auto_imports %>% filter(wbcode %in% c("JPN", "KOR"))
View(imports_jk)
bind_rows(imports_jk, auto_imports_year) %>% arrange(year)
imports_jk <- auto_imports %>% filter(wbcode %in% c("JPN", "KOR")) %>% rename(country = wbcode)
bind_rows(imports_jk, auto_imports_year) %>% arrange(year)
imports_jk <- auto_imports %>% filter(wbcode %in% c("JPN", "KOR")) %>% rename("country" = "wbcode")
bind_rows(imports_jk, auto_imports_year) %>% arrange(year)
auto_imports_year <- auto_imports %>% ungroup() %>% group_by(year) %>% summarise(imports = sum(imports)) %>%
mutate(country = "Total")
imports_jk <- auto_imports %>% filter(wbcode %in% c("JPN", "KOR")) %>% rename("country" = "wbcode")
bind_rows(imports_jk, auto_imports_year) %>% arrange(year)
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(usmap)
library(foreign)
library(ggplot2)
library(scales)
path_project <- "/Users/jiaxinhe/Documents/projects/auto-employment"
##################
### Data build ###
##################
schott_imports <- read.dta(file.path(path_project, "data/xm_sic87_72_105_20120424.dta"))
auto_imports <- schott_imports %>% filter(sic >= 3711, sic <= 3715) %>% select(year, wbcode, customs) %>%
replace(is.na(.), 0) %>% group_by(year, wbcode) %>% summarise(imports = sum(customs))
auto_imports_year <- auto_imports %>% ungroup() %>% group_by(year) %>% summarise(imports = sum(imports)) %>%
mutate(country = "Total")
imports_jk <- auto_imports %>% filter(wbcode %in% c("JPN", "KOR")) %>% rename("country" = "wbcode")
imports_output <- bind_rows(imports_jk, auto_imports_year) %>% arrange(year)
write.csv(imports_output, file.path(path_project, "output/auto_imports_1972_2005_sic.csv"))
View(imports_output)
View(imports_jk)
View(imports_output)
unique(schott_imports$sic)
View(schott_imports)
davis_imports <- read.dta(file.path(path_project, "data/uc_davis/imp72.dta"))
View(davis_imports)
View(davis_imports)
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(foreign)
library(scales)
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(foreign)
library(scales)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
path_project
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
View(davis_import)
davis_import_2 <- read.dta(file.path(path_davis, "imp89_con.dta"))
View(davis_import_2)
davis_import_2 <- read.dta(file.path(path_davis, "imp99_con.dta"))
davis_import_2 <- read.dta(file.path(path_davis, "imp06_con.dta"))
davis_import$sitc2
as.numeric(davis_import$sitc2)
test <- davis_import %>% mutate(sitc2 = as.numeric(sitc2)) %>% filter(sitc2 >= 78100, sitc2 < 78900)
View(test)
test <- davis_import_2 %>% mutate(sitc2 = as.numeric(sitc2)) %>% filter(sitc2 >= 78100, sitc2 < 78900)
davis_import <- read.dta(file.path(path_davis, "imp80.dta"))
davis_import <- read.dta(file.path(path_davis, "imp88.dta"))
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
View(concordance)
typeof(concordance$naics)
library(strings)
library(stringr)
concord_auto <- concordance %>% filter(str_starts(naics, "3361") |
str_starts(naics, "3362") |
str_starts(naics, "3363"))
View(concord_auto)
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361") |
str_starts(naics, "3362"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
concord_auto <- concordance %>% filter(str_starts(sic, "3711"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
concord_auto <- concordance %>% filter(str_starts(sic, "3711"))
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
View(davis_import)
davis_import_2 <- read.dta(file.path(path_davis, "imp06_con.dta"))
View(davis_import_2)
View(concord_auto)
unique(concord_auto$sitc2)
unique(concordance %>% filter(str_starts(naics, "3361")) %>% .$sitc2)
test <- davis_import_2 %>% mutate(sitc2 = as.numeric(sitc2)) %>% filter(sitc2 >= 78100, sitc2 < 78420)
View(test)
unique(test$sitc2)
test <- davis_import %>% mutate(sitc2 = as.numeric(sitc2)) %>% filter(sitc2 >= 78100, sitc2 < 78420)
unique(test$sitc2)
library(countrycode)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
View(un_codes)
eurostat::eu_countries
eurostat::eu_countries$name
View(un_codes)
countrycode::codelist %>%
filter(country.name.en %in% c("Yugoslavia", "Czechoslovakia", "German Democratic Republic")) %>%
select(country.name.en, un, iso3c, iso2c)
View(un_codes)
View(un_codes)
country_list <- c("Japan", "South Korea", "China", "Mexico")
eu_list <- eurostat::eu_countries$name
un_codes %>% filter(country.name.en %in% c(country_list, eu_list))
country_list <- c("Japan", "South Korea", "China", "Canada", "Mexico")
eu_list <- eurostat::eu_countries$name
un_codes %>% filter(country.name.en %in% c(country_list, eu_list)) %>%
rename("country" = "country.name.en")
eastern_bloc <- data.frame(country = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
View(eastern_bloc)
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
country_list <- c("Japan", "South Korea", "China", "Canada", "Mexico")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% country_list) %>%
rename("country" = "country.name.en")
View(non_eu_code_list)
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country" = "country.name.en") %>% bind_rows(., eastern_bloc)
View(eu_code_list)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
View(davis_import)
View(davis_import)
davis_import <- davis_import %>% mutate(un = substr(ccode, 3, 6))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5)))
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% country_list) %>%
rename("country" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country" = "country.name.en") %>% bind_rows(., eastern_bloc)
code_list <- bind_rows(non_eu_code_list, eu_code_list)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country" = "country.name.en")
code_list <- bind_rows(non_eu_code_list, eu_code_list)
View(code_list)
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un")
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un")
View(un_codes)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country" = "country.name.en") %>% bind_rows(., eastern_bloc)
code_list <- bind_rows(non_eu_code_list, eu_code_list)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un")
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un") %>% na.omit(country)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un")
View(davis_import)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un") %>% filter(!is.na(country))
runApp()
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(foreign)
library(scales)
library(stringr)
library(countrycode)
library(eurostat)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/auto-imports-data"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_davis <- file.path(path_data, "uc_davis")
path_output <- file.path(path_project, "output")
# Get SITC codes that correspond to NAICS 3361 (motor vehicles)
concordance <- read.dta(file.path(path_davis, "conimp89_06.dta"))
concord_auto <- concordance %>% filter(str_starts(naics, "3361"))
sitc_auto <- unique(concord_auto)
# Get country codes for the desired countires
un_codes <- countrycode::codelist %>%
select(country.name.en, un) %>%
filter(!is.na(un)) %>%
arrange(un)
non_eu_list <- c("Japan", "South Korea", "China", "Canada", "Mexico", "United Kingdom")
non_eu_code_list <- un_codes %>% filter(country.name.en %in% non_eu_list) %>%
rename("country" = "country.name.en")
# Aggregating all current EU members
# Eastern bloc regimes are included prior to 1989; note that not all of former Yugoslavia is in the EU
eu_list <- eurostat::eu_countries$name
eastern_bloc <- data.frame(country = c("Czechoslovakia", "East Germany", "Yugoslavia"),
un = c(200, 278, 890))
eu_code_list <- un_codes %>% filter(country.name.en %in% eu_list) %>%
rename("country" = "country.name.en") %>% bind_rows(., eastern_bloc) %>%
mutate(country = "European Union")
code_list <- bind_rows(non_eu_code_list, eu_code_list)
View(code_list)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>% mutate(un = as.numeric(substr(ccode, 3, 5))) %>%
left_join(code_list, by = "un") %>% filter(!is.na(country))
View(davis_import)
View(sitc_auto)
View(sitc_auto)
sitc_auto <- unique(concord_auto$sitc2)
sitc_auto
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(yr)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country), sitc2 %in% sitc_auto)
# import and clean 1972 to 1988
davis_import <- read.dta(file.path(path_davis, "imp72.dta"))
davis_import <- davis_import %>%
mutate(un = as.numeric(substr(ccode, 3, 5)),
year = 1900 + as.numeric(yr)) %>%
left_join(code_list, by = "un") %>%
filter(!is.na(country), sitc2 %in% sitc_auto) %>%
group_by(year, country) %>%
summarise(import_value = sum(cusvalue),
import_quantity = sum(quantity))
davis_import$import_value / davis_import$import_quantity
unique(code_list$country)
country_list <- data.frame(country = unique(code_list$country))
country_list
country_list %>% left_join(davis_import, by = "country")
# import and clean 1972 to 1988
cur_year <- 1972
country_list %>% left_join(davis_import, by = "country") %>%
mutate(year = cur_year) %>% replace(is.na(.), 0)
runApp()
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
