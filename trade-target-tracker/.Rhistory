
filter(year == 2000) %>% summarise(y = mean(manufacturing))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = manu_df,
x = ~quarter,
y = ~manufacturing,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}M<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Value Added (Billions of Dollars)",
tickformat = "$,.0f",
ticksuffix = "",
rangemode = "tozero"),
legend = list(title = list(text = "Manufacturing Value Added")),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1])
)
})
output$text_va <- renderText({
"White House trade policy aims to reverse the \"hollowing out of our manufacturing base\" and strengthen domestic manufacturing capacity by increasing the cost of foreign-manufactured goods. Real value added in manufacturing $2.4 trillion in Quarter 4, 2024, and has risen steadily over the past few decades."
})
## Employment, native born men prime age ##
emp_lvl_df = tibble(
quarter = as.Date(as.yearqtr(time(emp_lvl_prime_age_m))),
employment_lvl = as.numeric(emp_lvl_prime_age_m),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_employment_lvl_native <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(emp_lvl_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = emp_lvl_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(mean(employment_lvl))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = emp_lvl_df,
x = ~quarter,
y = ~employment_lvl,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}M<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Millions of Workers)",
tickformat = ".1f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add horizontal line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# label for balance
annotations = list(
list(
xref = "paper",
x = 0,
y = y_lvl+0.6,
text = paste0("2000 level, before China joined the WTO = ",round(y_lvl,1),"M"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_employment_lvl_native <- renderText({
"During the election, JD Vance argued that \"we have seven million — just men, not even women, just men — who have completely dropped out of the labor force….we cannot have an entire American business community that is giving up on American workers and then importing millions of illegal laborers.\" The prime age employment rate for native-born men in Quarter 1 2025 was 42.4 million. We set the target to be 44 million, which is the level in 2000 before China joined the WTO."
})
## Employment rate, native born men 18+ ##
emp_pop_ratio_df = tibble(
quarter = as.Date(as.yearqtr(time(emp_pop_ratio_m))),
emp_pop = as.numeric(emp_pop_ratio_m)*100,
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_employment_pop_native <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(emp_pop_ratio_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = emp_pop_ratio_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(mean(emp_pop))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = emp_pop_ratio_df,
x = ~quarter,
y = ~emp_pop,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}%<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment-to-Population Ratio (%)",
tickformat = ".1f",
ticksuffix = "%"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add horizontal line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# label for balance
annotations = list(
list(
xref = "paper",
x = 0.25,
y = y_lvl+0.3,
text = paste0("2000 level, before China joined the WTO = ",round(y_lvl,1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_employment_pop_native <- renderText({
"The Administration hopes to raise native-born employment in part by imposing more severe immigration restrictions and creating new jobs by restricting trade. The native-born male employment rate currently stands at 63.3%. We set the target to be 71.1%, which is the 2000 level before China joined the WTO."
})
## Employment Manufacturing ##
manu_df = tibble(
quarter = as.Date(as.yearqtr(time(manu_qt))),
manufacturing = as.numeric(manu_qt),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_emp_manu <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(manu_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = manu_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(y = mean(manufacturing))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = manu_df,
x = ~quarter,
y = ~manufacturing,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}M<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Millions of Workers)",
tickformat = ",.0f",
ticksuffix = "M"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
yaxis = list(title = "Employment (Millions of Workers)",
tickformat = "$,.1f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.27,
y = y_lvl + 0.2,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"M"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_emp_manu <- renderText({
"With the introduction of reciprocal tariffs on April 2nd, the president said that \"jobs and factories will come roaring back.\" Manufacturing employment stands at 12.8 million in Quarter 1 2025, down from the chosen target of 17.3 in 2000, the level before China joined the WTO in 2001."
})
## Manufacturing Share ##

manu_share_df = tibble(
quarter = as.Date(as.yearqtr(time(manu_share))),
manufacturing_share = as.numeric(manu_share) *100,
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)

output$plotly_share_manu <- renderPlotly({

# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(manu_share_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = manu_share_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(y = mean(manufacturing_share))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = manu_share_df,
x = ~quarter,
y = ~manufacturing_share,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = paste(
"Quarter: %{x}<br>",
"Value: %{y:,.0f}%<extra></extra> "  # extra hides the trace label (removes green line)
)) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Share of Private-Sector Workers (%)",
tickformat = ".0f",
ticksuffix = "%"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.26,
y = y_lvl + 0.3,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_share_manu <- renderText({
"With the introduction of reciprocal tariffs on April 2nd, the president said that \"jobs and factories will come roaring back.\" In  Quarter 1 2025 Manufacturing jobs made up 9.4% of employment, down from the chosen target of 15.5%, the level before China joined the WTO in 2001."
})
## Employment, motor vehicles and parts ##
motor_df = tibble(
quarter = as.Date(as.yearqtr(time(motor_qt))),
motor_level = as.numeric(motor_qt) *100,
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_motor_emp <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(motor_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = motor_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(y = mean(motor_level))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = motor_df,
x = ~quarter,
y = ~motor_level,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = paste(
"Quarter: %{x}<br>",
"Value: %{y:,.0f}M<extra></extra> "  # extra hides the trace label (removes green line)
)) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Millions of Workers)",
tickformat = ".0f",
ticksuffix = "M"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.26,
y = y_lvl + 1.3,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_motor_emp <- renderText({
"With the introduction of reciprocal tariffs on April 2nd, the president said that “jobs and factories will come roaring back.” There are 1.0 million vehicle-related manufacturing jobs, down from 1.3 million in 2000, the level before China joined the WTO in 2001."
})
## Motor vehicles and parts share of private employment ##
motor_share_df = tibble(
quarter = as.Date(as.yearqtr(time(motor_share))),
motor_share = as.numeric(motor_share) *100,
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_motor_share <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(motor_share_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year
tick_texts <- paste0("Q1 ", tick_years)
y_lvl = motor_share_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(y = mean(motor_share))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = motor_share_df,
x = ~quarter,
y = ~motor_share,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = paste(
"Quarter: %{x}<br>",
"Value: %{y:,.0f}%<extra></extra> "  # extra hides the trace label (removes green line)
)) %>%

hovertemplate = "%{x}: %{y:,.1f}%<extra></extra>"
) %>%

layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Share of Private-Sector Workers (%)",
tickformat = ".1f",
ticksuffix = "%"),
hovermode = "closest",

hoverlabel = list(bgcolor = eig_colors[1]),

# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.26,
y = y_lvl + 0.3,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_motor_share <- renderText({
"With the introduction of reciprocal tariffs on April 2nd, the president said that \"jobs and factories will come roaring back.\" Vehicle-related manufacturing jobs made up 0.7% of total U.S. jobs in Quarter 1 2025, down from 1.2% in 2000, the level before China joined the WTO in 2001."
})
## Employment in manufacturing, counties most affected by the "China shock"  ##
china_shock_df = tibble(
quarter = as.Date(as.yearqtr(time(china_shock_yr))),
china_shock = as.numeric(china_shock_yr),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
output$plotly_china_shock <- renderPlotly({
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(china_shock_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])

china_shock_yr
time(china_shock_yr)
## Employment in manufacturing, counties most affected by the "China shock"  ##
china_shock_df <- tibble(year = time(china_shock_yr),
cs_manu_emp = as.numeric(china_shock_yr),
hover_label = as.character(year))
View(china_shock_df)
# Dynamically generate tick dates: Q1 every 5 years
start_year <- china_shock_df$year[1]
end_year   <- china_shock_df$year[nrow(china_shock_df)]
start_year
end_year
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
start_year
end_year
# Dynamically generate tick dates: Q1 every 5 years
start_year <- china_shock_df$year[1]
end_year   <- china_shock_df$year[nrow(china_shock_df)]
# Round to the nearest lower multiple of 5
start_year <- start_year - (start_year %% 5)
end_year   <- end_year + (5 - end_year %% 5)
tick_years <- seq(start_year, end_year, by = 5)
tick_dates <- as.Date(paste0(tick_years, "-01-01"))  # Q1 of each year

tick_texts <- paste0("Q1 ", tick_years)
y_lvl = china_shock_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(y = mean(china_shock))
y_lvl = as.numeric(y_lvl[1,1])
plot_ly(
data = china_shock_df,
x = ~quarter,
y = ~china_shock,

tick_texts <- as.character(tick_years)
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,

type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,

hovertemplate = paste(
"Quarter: %{x}<br>",
"Value: $%{y:,.0f}<extra></extra> "  # extra hides the trace label (removes green line)
)) %>%
layout(
xaxis = list(title = "Time (Quarterly)",

hovertemplate = "%{x}: {y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".1f",
ticksuffix = "M"),
hovermode = "closest")
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".1f",
ticksuffix = "M"),
hovermode = "closest")
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".1f",
ticksuffix = "K")
plot_ly(
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".1f",
ticksuffix = ""),
hovermode = "closest")
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),

ticksuffix = "K"),
hovermode = "closest")
tick_dates
as.character(tick_years)
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_dates,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest")
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest")
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest")
y_lvl = china_shock_df %>% filter(year == 2000) %>% .$cs_manu_emp
y_lvl <- china_shock_df %>% filter(year == 2000) %>% .$cs_manu_emp
y_lvl
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.26,
y = y_lvl + 0.3,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.3,
y = y_lvl + 2,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
})
output$text_china_shock <- renderText({
"Identified by Autor et al. (2016), manufacturing employment in the 145 counties most impacted by trade with China are 0.47 million (2022). The target is 0.65 million, total employment in these counties before China joined the WTO in 2001."
})
}
shinyApp(ui = ui, server = server)

plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.28,
y = y_lvl + 5,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.28,
y = y_lvl + 10,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = china_shock_df,
x = ~year,
y = ~cs_manu_emp,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}K<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
hoverformat = "%Y Q%q",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Employment (Thousands of Workers)",
tickformat = ".0f",
ticksuffix = ""),
hovermode = "closest",
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[1], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.28,
y = y_lvl + 8,
text = paste0("2000 level, before China joined the WTO = " , round(y_lvl, 1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
runApp('plotly app experiment.R')
library(shiny); runApp('plotly app experiment.R')
