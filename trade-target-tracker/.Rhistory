range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Industrial Production Index",
tickformat = ".0f",
ticksuffix = "",
rangemode = "tozero"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.5,
y = y_lvl + 1,
text = paste0("2007 Q4 peak, before the Great Financial Crisis = " , round(y_lvl, 1)),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = ind_prod_df,
x = ~quarter,
y = ~ip,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:.1f}<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Industrial Production Index",
tickformat = ".0f",
ticksuffix = "",
rangemode = "tozero"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.5,
y = y_lvl + 1.3,
text = paste0("2007 Q4 peak, before the Great Financial Crisis = " , round(y_lvl, 1)),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = ind_prod_df,
x = ~quarter,
y = ~ip,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:.1f}<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Industrial Production Index",
tickformat = ".0f",
ticksuffix = "",
rangemode = "tozero"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.5,
y = y_lvl + 1.5,
text = paste0("2007 Q4 peak, before the Great Financial Crisis = " , round(y_lvl, 1)),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = ind_prod_df,
x = ~quarter,
y = ~ip,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:.1f}<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Industrial Production Index",
tickformat = ".0f",
ticksuffix = "",
rangemode = "tozero"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add target line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# add label for target
annotations = list(
list(
xref = "paper",
x = 0.4,
y = y_lvl + 1.6,
text = paste0("2007 Q4 peak, before the Great Financial Crisis = " , round(y_lvl, 1)),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
## Share of Value Added as a Percentage of GDP##
share_va_df <- tibble(
quarter = c(as.Date(time(share_va_manu_1997_2004_year)), as.Date(time(share_va_manu_2005_2024_qt))),
share_gdp = c(as.matrix(share_va_manu_1997_2004_year), as.matrix(share_va_manu_2005_2024_qt)),
hover_label = format(as.yearqtr(quarter), "%Y Q%q")
)
y_lvl <- share_va_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(mean(share_gdp))
y_lvl
y_lvl <- as.numeric(y_lvl[1,1])
y_lvl
# Dynamically generate tick dates: Q1 every 5 years
date_range <- range(share_va_df$quarter)
start_year <- lubridate::year(date_range[1])
end_year   <- lubridate::year(date_range[2])
# Add ticks
tick_years <- c(start_year,
seq((start_year %/% 5 + 1)*5, end_year %/% 5*5, by = 5))
tick_dates <- c(as.Date(paste0(tick_years, "-01-01")),
tail(date_range, 1))  # Q1 of each year
tick_texts <- as.character(as.yearqtr(tick_dates))
y_lvl <- share_va_df %>% mutate(year = lubridate::year(quarter)) %>%
filter(year == 2000) %>% summarise(mean(share_gdp))
y_lvl <- as.numeric(y_lvl[1,1])
plot_ly(
data = share_va_df,
x = ~quarter,
y = ~share_gdp,
type = 'scatter',
mode = 'lines',
name = "Value Added Share of GDP",
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}%<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Value Added Share of GDP (%)",
tickformat = ",.0f",
ticksuffix = "%"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add horizontal line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# label for balance
annotations = list(
list(
xref = "paper",
x = 0.25,
y = y_lvl+0.3,
text = paste0("2000 level, before China joined the WTO = ",round(y_lvl,1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = share_va_df,
x = ~quarter,
y = ~share_gdp,
type = 'scatter',
mode = 'lines',
name = "Value Added Share of GDP",
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}%<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Value Added Share of GDP (%)",
tickformat = ",.0f",
ticksuffix = "%"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add horizontal line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# label for balance
annotations = list(
list(
xref = "paper",
x = 0.15,
y = y_lvl+0.15,
text = paste0("2000 level, before China joined the WTO = ",round(y_lvl,1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
plot_ly(
data = share_va_df,
x = ~quarter,
y = ~share_gdp,
type = 'scatter',
mode = 'lines',
name = "Value Added Share of GDP",
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
hovertemplate = "%{x}: %{y:,.1f}%<extra></extra>"
) %>%
layout(
xaxis = list(title = "Time (Quarterly)",
tickvals = tick_dates,
ticktext = tick_texts,
hoverformat = "%Y Q%q",
range = c(tick_dates[1], tick_dates[length(tick_dates)])),
yaxis = list(title = "Value Added Share of GDP (%)",
tickformat = ",.0f",
ticksuffix = "%"),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1]),
# add horizontal line
shapes = list(
list(
type = "line",
xref = "paper",
x0 = 0, x1 = 1,
y0 = y_lvl, y1 = y_lvl,
line = list(color = eig_colors[4], width = 2, dash = "dash")
)
),
# label for balance
annotations = list(
list(
xref = "paper",
x = 0.12,
y = y_lvl+0.15,
text = paste0("2000 level, before China joined the WTO = ",round(y_lvl,1),"%"),
showarrow = FALSE,
font = list(color = eig_colors[2], size = 12),
xanchor = "left",
yanchor = "middle"
)
)
)
y_lvl <- share_va_df %>% filter(quarter == "2000-01-01") %>% .$share_gdp
y_lvl
share_va_df %>% filter(quarter == "2000-01-01") %>% .$share_gdp
runApp()
runApp()
runApp()
runApp()
runApp()
income_df <- tibble(
quarter = as.Date(time(income_yr)),
income = as.numeric(income_yr),
hover_label = format(as.yearqtr(quarter), "%Y")
)
income_df
View(income_df)
income_df <- tibble(
year = time(income_yr),
income = as.numeric(income_yr),
hover_label = as.character(year)
)
View(income_df)
income_df_trend <- income_df %>%
# get relevant years - trump up until break.
filter(quarter >= 2017,
quarter <= 2020)
income_df_trend <- income_df %>%
# get relevant years - trump up until break.
filter(year >= 2017,
year <= 2020)
View(income_df_trend)
income_df_trend <- income_df %>%
# get relevant years - trump up until break.
filter(year >= 2017,
year <= 2019)
View(income_df_trend)
View(income_df)
trend_model <- lm(income ~ as.numeric(quarter), data = income_df_trend)
trend_model <- lm(income ~ year, data = income_df_trend)
summary(trend_model)
income_df_trend <- income_df %>%
# get relevant years - trump up until break.
filter(year >= 2010,
year <= 2019)
trend_model <- lm(income ~ year, data = income_df_trend)
summary(trend_model)
## Real Median Household Income ##
income_df <- tibble(
year = time(income_yr),
income = as.numeric(income_yr),
hover_label = as.character(year)
)
income_df_trend <- income_df %>% filter(year >= 2010, year <= 2019)
trend_model <- lm(income ~ year, data = income_df_trend)
income_df <- income_df %>%
mutate(trend = predict(trend_model, newdata = data.frame(year = year)))
View(income_df)
# Dynamically generate tick dates: Q1 every 5 years
start_year <- income_df$year[1]
end_year   <- income_df$year[nrow(income_df)]
tick_years <- c(seq(start_year, end_year, by = 5), end_year)
tick_texts <- as.character(tick_years)
View(income_df)
# Dynamically generate tick dates: Q1 every 5 years
start_year <- income_df$year[1]
end_year   <- income_df$year[nrow(income_df)]
tick_years <- c(seq(start_year, end_year, by = 5), end_year)
tick_texts <- as.character(tick_years)
plot_ly(
data = income_df,
x = ~year,
y = ~income,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
name = 'Actual',
hovertemplate = "%{x}: %{$y:.1f}<extra></extra>"
) %>%
add_lines(
data = income_df,
x = ~year,
y = ~trend,
name = 'Projection at prior Trump Administration rate',
line = list(color = eig_colors[5], dash = 'dash')
) %>%
add_trace(
data = income_df_trend,
x = ~year,
y = ~predict(trend_model),
name = "Income Trendline during Trump's first Administration",
line = list(color = eig_colors[4], width = 2, dash = "dash"),
hoverinfo = "none",
hovertemplate = NULL,
showlegend = TRUE
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
ticktext = tick_texts,
hoverformat = "%Y"),
yaxis = list(title = "Household Median Income (Dollars)",
tickformat = ",.0f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1])
)
runApp()
runApp()
runApp()
start_year
end_year
tick_years
tick_texts
c(tick_years[1], tick_years[length(tick_years)]))
c(tick_years[1], tick_years[length(tick_years)])
plot_ly(
data = income_df,
x = ~year,
y = ~income,
type = 'scatter',
mode = 'lines',
line = list(color = eig_colors[1], width = 2),
text = ~hover_label,
name = 'Actual',
hovertemplate = "%{x}: %{$y:.1f}<extra></extra>"
) %>%
add_lines(
data = income_df,
x = ~year,
y = ~trend,
name = 'Projection at prior Trump Administration rate',
line = list(color = eig_colors[5], dash = 'dash'),
hoverinfo = "none",
hovertemplate = NULL,
showlegend = TRUE
) %>%
add_trace(
data = income_df_trend,
x = ~year,
y = ~predict(trend_model),
name = "Income Trendline during Trump's first Administration",
line = list(color = eig_colors[4], width = 2, dash = "dash"),
hoverinfo = "none",
hovertemplate = NULL,
showlegend = TRUE
) %>%
layout(
xaxis = list(title = "Time (Annual)",
tickvals = tick_years,
ticktext = tick_texts,
hoverformat = "%Y",
range = c(tick_years[1], tick_years[length(tick_years)])),
yaxis = list(title = "Household Median Income (Dollars)",
tickformat = ",.0f",
ticksuffix = ""),
hovermode = "closest",
hoverlabel = list(bgcolor = eig_colors[1])
)
runApp()
library(shiny); runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp('app v2.R')
runApp()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
rlang::last_trace()
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
# R Shiny
library(shiny)
library(rsconnect)
rsconnect::setAccountInfo(name='economicinnovationgroup',
token='1E424A49864E72123BE5CAA19E6D2274',
secret='/OJ/Oy/GW2sk6ibHJt4JgoqzB80U03mcEyFJn0ev')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker")
