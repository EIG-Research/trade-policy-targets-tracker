current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_cbp <- file.path(path_data, "CBP")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
china_shock_counties <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit <- china_shock_counties %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(county = cnty) %>% select(county, czone_1990, Full.County.name)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 + n50_99 +
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
for(year in c(as.character(98:99), paste0("0", 0:9), as.character(10:16))){
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% rename_with(tolower) %>% filter(naics == "31----") %>% select(-naics) %>%
mutate(across(starts_with("n"), ~as.numeric(.)*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ as.numeric(emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 +
n50_99 + n100_249 + n250_499 + n500_999 +
n1000_1 + n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
View(china_most_hit)
for(year in 17:22){
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% rename_with(tolower) %>% filter(naics == "31----") %>%
mutate(emp = case_when(empflag == "" ~ as.numeric(emp),
empflag == "A" ~ 19/2,
empflag == "B" ~ (20+99)/2,
empflag == "C" ~ (100+249)/2,
empflag == "E" ~ (250+499)/2,
empflag == "F" ~ (500+999)/2,
empflag == "G" ~ (1000+2499)/2,
empflag == "H" ~ (2500+4999)/2,
empflag == "I" ~ (5000+9999)/2,
empflag == "J" ~ (10000+24999)/2,
empflag == "K" ~ (25000+49999)/2,
empflag == "L" ~ (50000+99999)/2,
empflag == "M" ~ 100000,
TRUE ~ 0),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
year
year < 18
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
View(cbp_year)
year < 19
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
year <- 18
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% rename_with(tolower) %>% filter(naics == "31----")
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker",
"sarah" = "/Users/sarah/Documents/GitHub/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_cbp <- file.path(path_data, "CBP")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
china_shock_counties <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit <- china_shock_counties %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(county = cnty) %>% select(county, czone_1990, Full.County.name)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 + n50_99 +
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker",
"sarah" = "/Users/sarah/Documents/GitHub/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_cbp <- file.path(path_data, "CBP")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
china_shock_counties <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit <- china_shock_counties %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(county = cnty) %>% select(county, czone_1990, Full.County.name)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 + n50_99 +
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
View(china_most_hit)
china_shock_counties <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit <- china_shock_counties %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(county = cnty) %>% select(county, czone_1990, Full.County.name)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp),
empflag != "" ~ (n1_4 + n5_9 + n10_19 + n20_49 + n50_99 +
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4)*weight_emp),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
View(china_most_hit)
china_shock_counties <- read.csv(file.path(path_data, "china_shock_estimates_2.csv"))
china_most_hit <- china_shock_counties %>% select(2:11) %>% filter(CA.level.category == "Most hit") %>%
mutate(county = cnty) %>% select(county, czone_1990, Full.County.name)
# SIC to NAICS crosswalk from Eckert, Fort, Schott, and Yang (2021)
sic_naics_crosswalk <- read.csv(file.path(path_cbp, "full_sic87_naics97.csv")) %>%
filter(naics97 == "31----") %>% mutate(sic = sic87) %>%
select(sic, weight_emp) %>% na.omit()
# Generate establishment size bins
estab_bins <- c(
n1_4 = (1+4)/2,
n5_9 = (5+9)/2,
n10_19 = (10+19)/2,
n20_49 = (20+49)/2,
n50_99 = (50+99)/2,
n100_249 = (100+249)/2,
n250_499 = (250+499)/2,
n500_999 = (500+999)/2,
n1000 = 0,
n1000_1 = (1000+1499)/2,
n1000_2 = (1500+2499)/2,
n1000_3 = (2500+4999)/2,
n1000_4 = 5000
)
for(year in 90:97){
emp_var <- paste0("man_emp_", as.character(year))
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", as.character(year), "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% filter(sic %in% sic_naics_crosswalk$sic) %>%
left_join(sic_naics_crosswalk, by = "sic") %>%
mutate(across(starts_with("n"), ~.*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ floor(as.numeric(emp)*weight_emp),
empflag != "" ~ floor((n1_4 + n5_9 + n10_19 + n20_49 + n50_99 +
n100_249 + n250_499 + n500_999 + n1000_1 +
n1000_2 + n1000_3 + n1000_4)*weight_emp)),
county = fipstate * 1000 + fipscty) %>%
group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
View(china_most_hit)
sic_naics_crosswalk
for(year in c(as.character(98:99), paste0("0", 0:9), as.character(10:22))){
emp_var <- paste0("man_emp_", year)
cbp_year <- read.table(file.path(path_cbp, paste0("cbp", year, "co.txt")),
header=TRUE, sep = ',')
cbp_year <- cbp_year %>% rename_with(tolower) %>% filter(naics == "31----") %>% select(-naics)
if(year == "17"){
cbp_year <- cbp_year %>% mutate(emp = case_when(empflag == "" ~ as.numeric(emp),
empflag == "A" ~ 19/2,
empflag == "B" ~ (20+99)/2,
empflag == "C" ~ (100+249)/2,
empflag == "E" ~ (250+499)/2,
empflag == "F" ~ (500+999)/2,
empflag == "G" ~ (1000+2499)/2,
empflag == "H" ~ (2500+4999)/2,
empflag == "I" ~ (5000+9999)/2,
empflag == "J" ~ (10000+24999)/2,
empflag == "K" ~ (25000+49999)/2,
empflag == "L" ~ (50000+99999)/2,
empflag == "M" ~ 100000,
TRUE ~ 0),
county = fipstate * 1000 + fipscty)
}else if(year %in% c(as.character(18:22))){
cbp_year <- cbp_year %>% mutate(emp = as.numeric(emp),
county = fipstate * 1000 + fipscty)
}else{
cbp_year <- cbp_year %>% mutate(across(starts_with("n"), ~as.numeric(.)*estab_bins[cur_column()]),
emp = case_when(empflag == "" ~ as.numeric(emp),
empflag != "" ~ n1_4 + n5_9 + n10_19 + n20_49 +
n50_99 + n100_249 + n250_499 + n500_999 +
n1000_1 + n1000_2 + n1000_3 + n1000_4),
county = fipstate * 1000 + fipscty)
}
cbp_year <- cbp_year %>% ungroup() %>% group_by(county) %>% summarise(!!emp_var := sum(emp))
china_most_hit <- china_most_hit %>% left_join(cbp_year, by = "county")
}
View(china_most_hit)
manu_emp_cn_most_hit <- china_most_hit %>% ungroup() %>% mutate_all(~replace(., is.na(.), 0)) %>%
select(-1:-3) %>% summarise_all(sum)
manu_emp_cn_most_hit
manu_emp_cn_most_hit <- china_most_hit %>% ungroup() %>% mutate_all(~replace(., is.na(.), 0)) %>%
mutate_all(~floor(.)) %>% select(-1:-3) %>% summarise_all(sum)
china_most_hit
View(china_most_hit)
manu_emp_cn_most_hit <- china_most_hit %>% ungroup() %>% mutate_all(~replace(., is.na(.), 0)) %>%
select(-1:-3) %>% mutate_all(~floor(.)) %>% summarise_all(sum)
# save as time series
china_shock = manu_emp_cn_most_hit %>%
pivot_longer(cols = names(manu_emp_cn_most_hit)) %>%
mutate(year = as.numeric(gsub("man_emp_", "", name)),
year = case_when(
year >= 60 ~ 1900 + year,
TRUE ~ 2000 + year
), value = as.numeric(value)/1000) %>% select(year, value)
# convert to time series
china_shock_yr = ts(china_shock$value, start = c(1990), frequency = 1)
china_shock_yr
save(china_shock_yr, file = file.path(path_appdata, "china_shock.RData"))
shiny::runApp('~/Documents/projects/trade-policy-targets-tracker/trade-target-tracker')
manu_emp_cn_most_hit <- china_most_hit %>% ungroup() %>% mutate_all(~replace(., is.na(.), 0)) %>%
select(-1:-3) %>% mutate_all(~round(.)) %>% summarise_all(sum)
# save as time series
china_shock = manu_emp_cn_most_hit %>%
pivot_longer(cols = names(manu_emp_cn_most_hit)) %>%
mutate(year = as.numeric(gsub("man_emp_", "", name)),
year = case_when(
year >= 60 ~ 1900 + year,
TRUE ~ 2000 + year
), value = as.numeric(value)/1000) %>% select(year, value)
# convert to time series
china_shock_yr = ts(china_shock$value, start = c(1990), frequency = 1)
china_shock
china_shock_yr
save(china_shock_yr, file = file.path(path_appdata, "china_shock.RData"))
runApp('~/Documents/projects/noncompete-income/income_dashboard')
runApp('~/Documents/projects/noncompete-income/income_dashboard')
runApp('~/Documents/projects/noncompete-income/income_dashboard')
rsconnect::setAccountInfo(name='economicinnovationgroup',
token='1E424A49864E72123BE5CAA19E6D2274',
secret='/OJ/Oy/GW2sk6ibHJt4JgoqzB80U03mcEyFJn0ev')
deploy("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
deployAPP("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
# R Shiny
library(shiny)
library(rsconnect)
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
deployApp("/Users/jiaxinhe/Documents/projects/noncompete-income/income_dashboard")
# remove dependencies
rm(list = ls())
###########################
###   Load Packages     ###
###########################
library(tidyr)
library(dplyr)
library(tidycensus)
library(scales)
library(readxl)
library(seasonal)
#################
### Set paths ###
#################
# Define user-specific project directories
project_directories <- list(
"name" = "PATH TO GITHUB REPO",
"sarah" = "/Users/sarah/Documents/GitHub/trade-policy-targets-tracker",
"jiaxinhe" = "/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker"
)
# Setting project path based on current user
current_user <- Sys.info()[["user"]]
if (!current_user %in% names(project_directories)) {
stop("Root folder for current user is not defined.")
}
path_project <- project_directories[[current_user]]
path_data <- file.path(path_project, "data")
path_bea <- file.path(path_data, "BEA")
path_app <- file.path(path_project, "trade-target-tracker")
path_appdata <- file.path(path_app, "cleaned_data")
# Load 2017 real dollar adjustments from cleaned FRED data
load(file.path(path_appdata, "fred_data.RData"))
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1, column 3 "Goods"
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 6
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0225.xlsx"),
sheet = "Table 1",
skip = 74) %>%
select(1,3) %>%
na.omit() %>% rename(month = Monthly, balance = `...3`)
# Import trade balance data downloaded from BEA
# Link: https://www.bea.gov/data/intl-trade-investment/international-trade-goods-and-services
# Monthly aggregate: U.S. Trade in Goods and Services, 1960-present, Table 1, column 3 "Goods"
# Quarterly with China: U.S. Trade in Goods and Services by Selected Countries and Areas, 1999-present, Table 6
trade_agg_month <- read_xlsx(file.path(path_bea, "trad-time-series-0325.xlsx"),
sheet = "Table 1",
skip = 74) %>%
select(1,3) %>%
na.omit() %>% rename(month = Monthly, balance = `...3`)
View(trade_agg_month)
trade_china_qt <- read_xlsx(file.path(path_bea, "trad-geo-time-series-0125.xlsx"),
sheet = "Table 6",
skip = 5) %>% slice(29:n()) %>% select(Period, China) %>%
na.omit() %>% rename(quarter = Period, balance = China)
View(trade_china_qt)
# Monthly goods trade with China from 1992 to 1998 are obtained from Census
# Link: https://www.census.gov/foreign-trade/balance/c5700.html
trade_china_hist <- read.csv(file.path(path_bea, "trad-china-hist-92-98.csv")) %>%
select(Month, Balance) %>% rename(month = Month, balance = Balance)
trade_china_hist$balance <- round(as.numeric(sub(",", "", trade_china_hist$balance)), digits = 0)
# Real value added by industry
va_manu_q <- read.csv(file.path(path_bea, "real_VA_manu_2005_2024_Q.csv"), skip = 3, header = TRUE)
va_manu_q <- head(va_manu_q, -5) %>% select(-1:-2)
va_manu_2005_2024_qt <- (as.numeric(unlist(va_manu_q[2,]))/4) %>%
ts(., start = c(2005, 1), frequency = 4) / 1000
va_manu_a <- read.csv(file.path(path_bea, "real_VA_manu_1997_2004_A.csv"), skip = 3, header = TRUE)
va_manu_a <- head(va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
va_manu_1997_2004_year <- (as.numeric(unlist(va_manu_a[1,]))/4) %>%
ts(., start = c(1997, 1), frequency = 1) / 1000
# Manufacturing value added share of gdp
share_va_manu_q <- read.csv(file.path(path_bea, "manu_share_gdp_2005_2024_Q.csv"), skip = 3, header = TRUE)
share_va_manu_q <- head(share_va_manu_q, -5) %>% select(-1:-2)
share_va_manu_2005_2024_qt <- as.numeric(unlist(share_va_manu_q[2,])) %>%
ts(., start = c(2005, 1), frequency = 4)
share_va_manu_a <- read.csv(file.path(path_bea, "manu_share_gdp_1997_2004_A.csv"), skip = 3, header = TRUE)
share_va_manu_a <- head(share_va_manu_a, -5) %>% select(-1:-2) %>% na.omit()
share_va_manu_1997_2004_year <- as.numeric(unlist(share_va_manu_a[1,])) %>%
ts(., start = c(1997, 1), frequency = 1)
# Aggregate quarterly total trade balance
trade_agg_qt <- trade_agg_month$balance %>% ts(., start = c(1992,1), frequency = 12) %>%
aggregate(., nfrequency = 4, FUN = sum)
trade_agg_qt
View(trade_agg_month)
# Aggregate quarterly China trade balance
# Seasonally adjust historical data
trade_china_qt_92_98 <- final(seas(trade_china_hist$balance %>%
ts(., start = c(1992,1), frequency = 12))) %>%
aggregate(., nfrequency = 4, FUN = sum)
trade_china_qt_99_24 <- trade_china_qt$balance %>% ts(., start = c(1999,1), frequency = 4)
trade_china_qt <- round(ts(c(trade_china_qt_92_98, trade_china_qt_99_24, -81081), start = start(trade_china_qt_92_98),
frequency = 4), digits = 0)
trade_china_qt
trade_agg_qt
pce_adj
trade_china_qt
pce_adj[9:length(pce_adj)]
# Adjust to billions of 2017 dollars
# Remove the -1 when trade data comes out
trade_agg_qt <- trade_agg_qt / (pce_adj[9:length(pce_adj)]*1000)
trade_china_qt <- trade_china_qt / (pce_adj[9:length(pce_adj)]*1000)
trade_china_qt
# Export data
save(trade_agg_qt, trade_china_qt, va_manu_1997_2004_year, va_manu_2005_2024_qt,
share_va_manu_1997_2004_year, share_va_manu_2005_2024_qt, file = file.path(path_appdata, "bea_data.RData"))
shiny::runApp('~/Documents/projects/trade-policy-targets-tracker/trade-target-tracker')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker/")
runApp('~/Documents/projects/trade-policy-targets-tracker/trade-target-tracker')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker/")
runApp('~/Documents/projects/trade-policy-targets-tracker/trade-target-tracker')
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker/")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker/")
deployApp("/Users/jiaxinhe/Documents/projects/trade-policy-targets-tracker/trade-target-tracker/")
